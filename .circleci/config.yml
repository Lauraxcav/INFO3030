# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: circleci/mysql:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/INFO3030/lauracavanaugh-app

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: stocks
      MYSQL_USER: student
      MYSQL_PASSWORD: mysql

    steps:
      - checkout:
            path: ~/INFO3030

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline
      
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
          
      - run:
          name: Install mysql-client
          command: |
            sudo apt-get install mysql-client
      - run:
          name: Import dummy data; run an example query running db setup from a file
          command: |
            mysql -h 127.0.0.1 -u student -pmysql stocks < sql/stocks_db_initialization.sql
            
      - run:
          name: run an example query
          command: |
            mysql -h 127.0.0.1 -u student -pmysql --execute="SELECT * FROM stocks.person"
            

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test
      
workflows:
  version: 2
  build-deploy:
    jobs:
      - build